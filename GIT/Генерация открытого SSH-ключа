Генерация открытого SSH-ключа
Git-сервисы используют аутентификацию по открытым SSH-ключам. 
Это упрощает доступ к удаленным репозиториям и освобождает от необходимости каждый раз вводить логин и пароль.
Сперва следует проверить нет ли уже сгенерированного SSH-ключа, который можно использовать.
Процесс идентичен во всех ОС. Все пользовательские SSH-ключи по умолчанию хранятся в каталоге ~/.ssh. Поэтому перейдем в него и проверим содержимое:

$ cd ~/.ssh 
$ ls
known_hosts

Файлы id_dsa или id_rsa и есть то, что нам нужно. Файлы с расширением .pub — открытые ключи, остальные — приватные. 
Если файлов нет или даже нет каталога .ssh (в нашем примере каталог есть, а вот файлов нет), то все это можно сгенерировать.

Для этого можно воспользоваться утилитой ssh-keygen. На macOS и Linux она является частью пакета SSH, а на Windows поставляется вместе с Git:

$ ssh-keygen -o
Generating public/private rsa key pair.
Enter file in which to save the key (/home/daniilshat/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/daniilshat/.ssh/id_rsa
Your public key has been saved in /home/daniilshat/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:Eep/BjjzpZzyiNhXNLTlLbmOQhTeAsg2HFigZ1+yku8 daniilshat@workstation
The key's randomart image is:
+---[RSA 3072]----+
|.*oo    .        |
|o * . .....      |
|..o..oo+.+ o     |
| o o =+.=.+ .    |
|  o o.=oS..o     |
|   o  .*.=.      |
|    ....*oo      |
|   + .o+.o.      |
|  . E....        |
+----[SHA256]-----+
Сперва система предложит директорию для сохранения по умолчанию, проверьте, чтобы было предложено сохранить в .../.ssh/id_rsa. 
Если вдруг будет что-то другое (это маловероятно), укажите верный путь. Далее утилита попросит ввести пароль для приватного ключа и повторить его. А потом выдаст сообщение об успешной генерации.

Открытый SSH-ключ выглядит вот таким образом:

$ cat ~/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDV5eqahOIl2Dn+YZmsKZ7OcjxvjN6TIcsGiKIcXHgxVQ+oM3vGY6E2vZxJ+hCpYYdESTjytGILgbfLBM
Далее необходимо добавить сгенерированный SSH-ключ в GitHub. Для этого переходим в свой профиль. 
В правом верхнем углу кликаем на миниатюру со своей аватаркой и в открывшемся меню переходим в пункт «Settings».

На открывшейся странице переходим в «SSH and GPG keys».

Нажимаем на кнопку «New SSH key».
На открывшейся странице:

В «Title» введите какое-то название ключа или его идентификатор. К примеру, название машины на которой вы создали ключ и собираетесь работать (Пример: Home MacBook Air);
в поле «Key» вставьте сам сгенерированный ключ;
Нажмите «Add SSH key».

Далее GitHub попросит ввести пароль от аккаунта и добавит ключ, а на почту придет уведомление о том, что все прошло успешно.
